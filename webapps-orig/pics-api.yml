---
- name: pics-api docker network
  docker_network:
    name: pics-api

- name: pics postgres backups container
  docker_container:
    image: postgres:9.6
    name: pics-db-backups
    state: present
    volumes:
      - /backup

- name: pics postgres data container
  docker_container:
    image: postgres:9.6
    name: pics-db-data
    state: present

- name: pics postgres
  docker_container:
    image: postgres:9.6
    name: pics-db
    state: started
    env:
      POSTGRES_USER: 'pics_api'
      POSTGRES_PASSWORD: "{{ PICS_API.POSTGRES_PASSWORD }}"
    exposed:
      - 5432
    networks:
      - name: pics-api
    volumes_from:
      - pics-db-backups
      - pics-db-data

- name: pics backer-upper
  docker_container:
    image: jmcarbo/docker-postgres-backup
    name: pics-db-backer-upper
    env:
      INIT_BACKUP: true
      INIT_RESTORE_LATEST: true
      POSTGRES_DB: 'pics_api_production'
      POSTGRES_HOST: 'pg'
      POSTGRES_PASSWORD: "{{ PICS_API.POSTGRES_PASSWORD }}"
      POSTGRES_PORT: '5432'
      POSTGRES_USER: 'pics_api'
    networks:
      - name: pics-api
        links:
          - "pics-db:pg"
    volumes_from:
      - pics-db-backups

- name: pics redis data container
  docker_container:
    image: redis:3.2
    name: pics-redis-data
    state: present

- name: pics redis
  docker_container:
    command: redis-server --requirepass "{{ PICS_API.REDIS_PASSWORD }}"
    image: redis:3.2
    name: pics-redis
    state: started
    exposed:
      - 6379
    networks:
      - name: pics-api
    volumes_from:
      - pics-redis-data

- name: pics rails
  docker_container:
    env_file: pics-api.env
    image: ballpointpenguin/pics-api
    name: pics-rails
    pull: true
    restart: yes
    state: started
    env:
      VIRTUAL_HOST: "api.rosas.pics"
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST: "api.rosas.pics"
      LETSENCRYPT_EMAIL: "ben@aliencyb.org"
    exposed:
      - 3000
    networks:
      - name: pics-api
        links:
          - "pics-db:postgres"
          - "pics-redis:redis"

- name: pics sidekiq
  docker_container:
    command: bundle exec sidekiq -C config/sidekiq.yml.erb
    env_file: pics-api.env
    image: ballpointpenguin/pics-api
    name: pics-sidekiq
    restart: yes
    state: started
    networks:
      - name: pics-api
        links:
          - "pics-db:postgres"
          - "pics-redis:redis"
    volumes_from:
      - pics-rails

- name: pics action cable
  docker_container:
    command: bundle exec puma -p 28080 cable/config.ru
    env_file: pics-api.env
    image: ballpointpenguin/pics-api
    name: pics-cable
    state: started
    exposed:
      - 28080
    networks:
      - name: pics-api
        links:
          - "pics-redis:redis"
    volumes_from:
      - pics-rails

